
#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

# AC_PREREQ(2.61)
AC_INIT(FULL-PACKAGE-NAME, VERSION, BUG-REPORT-ADDRESS)

dnl Include Fortran related definitions
builtin(include,src/confdb/aclocal_fc.m4)

dnl Include OpenMP related definitions
builtin(include,src/confdb/ax_pthread.m4)
builtin(include,src/confdb/ax_openmp.m4)

dnl Include MPI related definitions
# builtin(include,src/confdb/ax_check_libmpi.m4)
builtin(include,src/confdb/ax_mpi.m4)

dnl Include hdf5 Check
builtin(include,src/confdb/ax_lib_hdf5.m4)

dnl Include pkg-config Check
builtin(include,src/confdb/pkg.m4)


AC_CONFIG_SRCDIR([src/programs/SPH_MHD/main_sph_MHD.f90])
# AC_CONFIG_HEADER([config.h])

AC_ARG_ENABLE(fftw3,
	[  --enable-fftw3          Use fftw3 library],[USE_fftw3='yes'],[USE_fftw3='no'])

AC_MSG_RESULT(enable_fftw3... "${USE_fftw3}")

# Checks for programs.
AC_PROG_CC
AC_PROG_FC

if test -z ${AR}
then
	ar_bin="ar"
else
	ar_bin="${AR}"
fi
AC_SUBST(ar_bin)

AC_PROG_MAKE_SET
AC_PROG_RANLIB


# libtool check
PKG_PROG_PKG_CONFIG

# Checks using C compiler
AC_LANG_SAVE
AC_LANG(C)
# Check OpenMP
AX_OPENMP
AC_SUBST(OPENMP_CFLAGS)
# Check MPI
AX_MPI
AC_LANG_RESTORE

# Checks using Fortran Compiler
AC_LANG_SAVE
AC_LANG(Fortran)
# Check OpenMP
AX_OPENMP
AC_SUBST(OPENMP_FCFLAGS)
# Check MPI
AX_MPI
AC_LANG_RESTORE
AC_SUBST(MPIDIR)
AC_SUBST(MPILIBS)
AC_SUBST(MPIINCDIR)

# AC_MSG_RESULT(MPIDIR..."${MPIDIR}")
# AC_MSG_RESULT(MPIINCDIR..."${MPIINCDIR}")
# AC_MSG_RESULT(MPILIBS..."${MPILIBS}")


# hdf5 check
AX_LIB_HDF5(parallel)
AC_MSG_RESULT(HDF5_LDFLAGS... "${HDF5_LDFLAGS}")
AC_MSG_RESULT(HDF5_PFLIBS... "${HDF5_PFLIBS}")


#
#  Check subroutien name for Fortran-C connection
# 
enable_connect_to_c="no"
if test ${USE_fftw3} = "yes"
then
  enable_connect_to_c="yes"
fi
AC_MSG_RESULT(enable_connect_to_c..."${enable_connect_to_c}")


if test ${enable_connect_to_c} = "yes"
then
	PAC_PROG_FC_NAME_MANGLE
	DFC_NAME_MANGLE="-D${FC_NAME_MANGLE}"
	AC_SUBST(DFC_NAME_MANGLE)
	AC_MSG_RESULT(DFC_NAME_MANGLE..."${DFC_NAME_MANGLE}")

# Checks for header files.
	AC_HEADER_STDC
	AC_CHECK_HEADERS([stdlib.h string.h])

# Checks for typedefs, structures, and compiler characteristics.
	AC_HEADER_STDBOOL
	AC_C_CONST

# Checks for library functions.
	AC_FUNC_MALLOC
	AC_CHECK_FUNCS([floor memset sqrt strrchr strtol])

# Check FFTW3
	if test ${USE_fftw3} = "yes"
	then
		PKG_CHECK_MODULES([FFTW3], fftw3, have_fftw3=yes, AC_MSG_ERROR(Cannot find FFTW 3.x))
		echo "have_fftw3=$have_fftw3"
	fi
	if test ${have_fftw3} = "yes"
	then
		PKGFLAGS_FFTW3="fftw3"
	fi
	AC_SUBST(PKGFLAGS_FFTW3)
	AC_SUBST(FFTW3_CFLAGS)
	AC_SUBST(FFTW3_LIBS)
fi


AC_MSG_RESULT()
AC_MSG_RESULT(-----   Configuration summary   -------------------------------)
AC_MSG_RESULT()
if test -n "${OPENMP_FCFLAGS}"; then
        AC_MSG_RESULT(    Use OpenMP ...        yes)
else
        AC_MSG_RESULT(    Use OpenMP ...         no)
fi
AC_MSG_RESULT()
if test -n "${FFTW3_LIBS}"; then
        AC_MSG_RESULT(    Use FFTW3 ...         yes)
else
        AC_MSG_RESULT(    Use FFTW3 ...          no)
fi
if test -n "${HDF5_PFLIBS}"; then
        AC_MSG_RESULT(    Use parallel HDF5 ... yes)
else
        AC_MSG_RESULT(    Use parallel HDF5 ...  no)
fi
AC_MSG_RESULT()
AC_MSG_RESULT(---------------------------------------------------------------)
AC_MSG_RESULT()


AC_CONFIG_FILES([Makefile])
AC_OUTPUT
